{"version":3,"sources":["components/Header.js","components/AddOption.js","components/Options.js","components/modelElement.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","ddOption","state","error","undefined","foamHandler","e","preventDefault","val","target","elements","tex","value","_this","setState","props","stateHandler","this","onSubmit","name","id","Component","Options","onClick","removeHandler","option","length","map","c","index","key","concat","singleElementDelete","modelElement","lib_default","isOpen","isSelected","contentLabel","onRequestClose","isSelectedHandler","closeTimeoutMS","rand","class","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addStateHandler","console","log","indexOf","previous","document","getElementById","op","filter","whattodo","Math","floor","random","removeHandle","bind","assertThisInitialized","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","AddOption_ddOption","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72234322.chunk.js","sourcesContent":["import React  from 'react';\r\n  \r\n\r\nexport default ()=>(\r\n    <div className=\" header\">\r\n        <div className=\"container\">\r\n            <h1 className=\"header_title\">Indesicion App</h1>\r\n            <p className=\"header_subtitle\">Put your life in the hands of computer</p>\r\n        </div>\r\n   </div>\r\n   )\r\n\r\n","import React ,{Component} from 'react';\r\n\r\n\r\n\r\n\r\nexport default class ddOption extends Component{\r\n  state={error:undefined}\r\n \r\n  \r\n  foamHandler=(e)=> {\r\n    e.preventDefault();\r\n   let val=e.target.elements.tex.value;\r\n   \r\n    this.setState(()=> ({  error:this.props.stateHandler(val)  }) );\r\n    \r\n  }\r\n  render(){\r\n     \r\n    return(\r\n         <div>\r\n           {this.state.error && <p className=\"error-message\">{this.state.error}</p>}   \r\n           <form  className=\"add-option-foam\" onSubmit={this.foamHandler}>\r\n            <input className=\"add-option-input\" name=\"tex\" id=\"na\"/>\r\n            <button className=\"button\" >Add Option</button>     \r\n            </form><br/>\r\n              \r\n         </div>\r\n\r\n      );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default (props)=>(\r\n  <div>\r\n       <div className=\"widget-header\">\r\n          <h3 className=\"widget-title\">Your Options</h3>\r\n          <button className=\" button-link\" onClick={props.removeHandler}>Remove All</button>  \r\n        </div>\r\n    \r\n        {props.option.length===0 && <p className=\" option-body  \">Please add an option to get start</p>}\r\n       <div>\r\n          {props.option.map((c,index) =>\r\n                  <div  key={c} className=\"option-content \">\r\n                     {`${index +1}. ${c}`}\r\n                     <button className=\"button-link\" onClick={()=> props.singleElementDelete(c)} >Remove</button>   \r\n                  </div>\r\n          )}\r\n      \r\n        </div>\r\n     \r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\nexport default (props)=>(\r\n  <div>\r\n  <Modal \r\n    isOpen={props.isSelected}\r\n    \r\n    contentLabel=\"Selected Option\"\r\n    onRequestClose={props.isSelectedHandler}\r\n    closeTimeoutMS={200}\r\n    className=\"modal\"\r\n    >\r\n       <h3 className=\"modal__title\" >Selected Item</h3>\r\n       <p  className=\"modal__body\">{props.option[props.rand]}</p>\r\n       <button onClick={ props.isSelectedHandler} class=\"button\"> Okay </button>\r\n    </Modal>\r\n  </div>\r\n)","import React,{Component}  from 'react';\r\nimport Header from './components/Header.js';\r\nimport Action from './components/Action.js';\r\nimport AddOption from './components/AddOption.js';\r\nimport Options from './components/Options.js';\r\nimport ModalElement from './components/modelElement.js';\r\n\r\n class App extends Component{ \r\n constructor(){\r\n   super();\r\n   this.removeHandle=this.removeHandle.bind(this);\r\n   this.state={\r\n       option:[],\r\n      isSelected:false,\r\n      rand:undefined\r\n    \r\n   }\r\n }\r\n  componentDidMount()\r\n  {\r\n    try{\r\n      const json=localStorage.getItem(\"options\");\r\n    const option=JSON.parse(json);\r\n    if(option)\r\n    {\r\n      this.setState(()=>({option:option}))\r\n    }\r\n    else{\r\n      console.log(\"EMPTY\");\r\n    }\r\n    \r\n    }catch(e)\r\n    {\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps)\r\n  {\r\n    if(this.state.option.length>=0)\r\n    {const json=JSON.stringify(this.state.option);\r\n      localStorage.setItem('options',json);\r\n      console.log(\"mount\",json)\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  addStateHandler=(val)=>\r\n  {\r\n   \r\n   console.log(val)\r\n   if(!val)\r\n   {\r\n     return \"Enter valid string\";\r\n   }\r\n   else if(this.state.option.indexOf(val)>-1)\r\n   {\r\n     return \"Work already exist\";\r\n   }\r\n   \r\n   this.setState((previous)=> ({ option:previous.option.concat(val) }) );\r\n   document.getElementById(\"na\").value=\"\"\r\n}\r\n\r\nremoveHandle()\r\n{\r\n  this.setState(()=> ({  option:[]  }) );\r\n\r\n  \r\n}\r\n\r\nsingleElementDelete=(op)=>{\r\n\r\nthis.setState(()=> ({ option:this.state.option.filter((option)=> {\r\n  return  option!==op\r\n  console.log(option,\"  \",op)\r\n  ;\r\n})\r\n }));\r\n}\r\nwhattodo=()=>{\r\n  const rand=Math.floor(Math.random()*this.state.option.length);\r\n  this.setState(()=>({rand}))\r\n\r\n  //alert(this.state.option[rand]);\r\n  this.setState(()=>({isSelected:!this.state.isSelected}))\r\n  \r\n}\r\nisSelectedHandler=()=>{\r\n  this.setState(()=>({isSelected:!this.state.isSelected}))\r\n}\r\n    render(){\r\n      return(\r\n        <div>\r\n          <Header />\r\n          <div className=\" container\">\r\n            <div className=\"action_body\">\r\n           \r\n            <div className=\"widget\">\r\n              <Options  removeHandler={this.removeHandle} option={this.state.option} singleElementDelete={this.singleElementDelete}/>\r\n              <AddOption  stateHandler={this.addStateHandler} />\r\n              </div>\r\n              <ModalElement rand={this.state.rand} option={this.state.option} isSelected={this.state.isSelected} isSelectedHandler={this.isSelectedHandler} />\r\n              </div> \r\n              \r\n          </div>\r\n         \r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'normalize.css';\n\nimport './index.scss';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}